{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Thumper API",
    "summary" : null,
    "description" : "API for Thumper, the official Cottontail DB UI Version 1.0.0",
    "termsOfService" : null,
    "contact" : null,
    "license" : null,
    "version" : "1.0.0."
  },
  "paths" : {
    "/api/session/connect" : {
      "post" : {
        "tags" : [ "Session" ],
        "summary" : "Creates and connects a new Cottontail DB connection.",
        "operationId" : "postApiSessionConnect",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Connection"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Connection"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/session/connections" : {
      "get" : {
        "tags" : [ "Session" ],
        "summary" : "Adds a new media collection.",
        "operationId" : "getApiSessionConnections",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Connection"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/session/disconnect" : {
      "post" : {
        "tags" : [ "Session" ],
        "summary" : "Disconnects an existing and connected Cottontail DB connection.",
        "operationId" : "postApiSessionDisconnect",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Connection"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Connection"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/list" : {
      "get" : {
        "tags" : [ "DDL", "Schema" ],
        "summary" : "Lists all schemas in the database specified by the connection string.",
        "operationId" : "getApiByConnectionList",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Schema"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/{schema}" : {
      "post" : {
        "tags" : [ "DDL", "Schema" ],
        "summary" : "Creates a new schema in the database specified by the connection string.",
        "operationId" : "postApiByConnectionBySchema",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema to create.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "delete" : {
        "tags" : [ "DDL", "Schema" ],
        "summary" : "Creates a new schema in the database specified by the connection string.",
        "operationId" : "deleteApiByConnectionBySchema",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema to drop.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/{schema}/list" : {
      "get" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Lists all entities in the database and schema specified by the connection string.",
        "operationId" : "getApiByConnectionBySchemaList",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema to list entities for.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/{schema}/{entity}" : {
      "get" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Lists details about the entity specified by the connection string.",
        "operationId" : "getApiByConnectionBySchemaByEntity",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to list details about.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Entity"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Creates the entity specified by the connection string.",
        "operationId" : "postApiByConnectionBySchemaByEntity",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to create.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Column"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "delete" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Drops the entity specified by the connection string.",
        "operationId" : "deleteApiByConnectionBySchemaByEntity",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to drop.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/{schema}/{entity}/truncate" : {
      "delete" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Truncates the entity specified by the connection string.",
        "operationId" : "deleteApiByConnectionBySchemaByEntityTruncate",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to truncate.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Type" : {
        "type" : "string",
        "enum" : [ "BOOLEAN", "BYTE", "SHORT", "INTEGER", "LONG", "FLOAT", "DOUBLE", "DATE", "STRING", "COMPLEX32", "COMPLEX64", "DOUBLE_VECTOR", "FLOAT_VECTOR", "LONG_VECTOR", "INTEGER_VECTOR", "BOOLEAN_VECTOR", "COMPLEX32_VECTOR", "COMPLEX64_VECTOR", "BYTESTRING", "UNDEFINED" ]
      },
      "Column" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          },
          "length" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nullable" : {
            "type" : "boolean"
          },
          "autoIncrement" : {
            "type" : "boolean"
          }
        },
        "required" : [ "name", "type", "length", "nullable", "autoIncrement" ]
      },
      "Entity" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Column"
            }
          },
          "indexes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Index"
            }
          }
        },
        "required" : [ "name", "columns", "indexes" ]
      },
      "Index" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "name", "type" ]
      },
      "Schema" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "name" ]
      },
      "Connection" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "host" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "host", "port" ]
      },
      "ErrorStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "description" ]
      },
      "SuccessStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "description" ]
      }
    },
    "securitySchemes" : {
      "CookieAuth" : {
        "name" : "SESSIONID",
        "in" : "cookie",
        "type" : "apiKey"
      }
    }
  },
  "servers" : [ ],
  "security" : [ ]
}