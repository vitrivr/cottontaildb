{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Thumper API",
    "summary" : null,
    "description" : "API for Thumper, the official Cottontail DB UI Version 1.0.0",
    "termsOfService" : null,
    "contact" : null,
    "license" : null,
    "version" : "1.0.0."
  },
  "paths" : {
    "/api/session/connect" : {
      "post" : {
        "tags" : [ "Session" ],
        "summary" : "Creates and connects a new Cottontail DB connection.",
        "operationId" : "postApiSessionConnect",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Connection"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Connection"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/session/connections" : {
      "get" : {
        "tags" : [ "Session" ],
        "summary" : "Adds a new media collection.",
        "operationId" : "getApiSessionConnections",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Connection"
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/session/disconnect" : {
      "post" : {
        "tags" : [ "Session" ],
        "summary" : "Disconnects an existing and connected Cottontail DB connection.",
        "operationId" : "postApiSessionDisconnect",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Connection"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Connection"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}" : {
      "get" : {
        "tags" : [ "DDL", "Schema" ],
        "summary" : "Lists all schemas in the database specified by the connection string.",
        "operationId" : "getListSchema",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Dbo"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/locks" : {
      "get" : {
        "tags" : [ "System" ],
        "summary" : "Lists details about the entity specified by the connection string.",
        "operationId" : "getListLocks",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityDetails"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/transactions" : {
      "get" : {
        "tags" : [ "System", "Transaction" ],
        "summary" : "Lists all ongoing transactions in the database specified by the connection string.",
        "operationId" : "getListTransactions",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/transactions/{txId}" : {
      "delete" : {
        "tags" : [ "System", "Transaction" ],
        "summary" : "Kills an ongoing transaction in the database specified by the connection string.",
        "operationId" : "deleteKillTransaction",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "txId",
          "in" : "path",
          "description" : "The numeric transaction ID to kill.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/{schema}" : {
      "post" : {
        "tags" : [ "DDL", "Schema" ],
        "summary" : "Creates a new schema in the database specified by the connection string.",
        "operationId" : "postCreateSchema",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema to create.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "delete" : {
        "tags" : [ "DDL", "Schema" ],
        "summary" : "Drops an existing schema in the database specified by the connection string.",
        "operationId" : "deleteDropSchema",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema to drop.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "get" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Lists all entities in the database and schema specified by the connection string.",
        "operationId" : "getListEntities",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema to list entities for.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Dbo"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/{schema}/{entity}" : {
      "get" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Lists details about the entity specified by the connection string.",
        "operationId" : "getEntityAbout",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to list details about.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityDetails"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Creates the entity specified by the connection string.",
        "operationId" : "postCreateEntity",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to create.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ColumnDetails"
                }
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "delete" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Drops the entity specified by the connection string.",
        "operationId" : "deleteDropEntity",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to drop.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/{schema}/{entity}/delete" : {
      "delete" : {
        "tags" : [ "DML", "Delete" ],
        "summary" : "Deletes an entry specified by the connection string and the provided key and value.",
        "operationId" : "deleteRecord",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to drop.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Predicate"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/{schema}/{entity}/preview" : {
      "get" : {
        "tags" : [ "DQL", "Entity" ],
        "summary" : "Previews data for the entity specified by the connection string The preview can be customised through parameters.",
        "operationId" : "getEntityPreview",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to list details about.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum size of the result set. Used for pagination.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of items to skip in the result set. Used for pagination.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "sortColumn",
          "in" : "query",
          "description" : "The name of the column to sort by.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortDirection",
          "in" : "query",
          "description" : "The requested sort direct.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Resultset"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/{connection}/{schema}/{entity}/truncate" : {
      "delete" : {
        "tags" : [ "DDL", "Entity" ],
        "summary" : "Truncates the entity specified by the connection string.",
        "operationId" : "deleteTruncateEntity",
        "parameters" : [ {
          "name" : "connection",
          "in" : "path",
          "description" : "Connection string in the for <host>:<port>.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schema",
          "in" : "path",
          "description" : "Name of the schema the entity belongs to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entity",
          "in" : "path",
          "description" : "Name of the entity to truncate.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Predicate" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : { }
      },
      "Types" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "logicalSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "physicalSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "name", "logicalSize", "physicalSize", "ordinal" ]
      },
      "PublicValue" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "logicalSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "$ref" : "#/components/schemas/Types"
          },
          "equal" : {
            "type" : "boolean"
          }
        },
        "required" : [ "logicalSize", "type", "equal" ]
      },
      "Dbo" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "fqn" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/DboType"
          }
        },
        "required" : [ "name", "fqn", "type" ]
      },
      "DboType" : {
        "type" : "string",
        "enum" : [ "SCHEMA", "ENTITY", "COLUMN", "INDEX" ]
      },
      "ColumnDetails" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "fqn" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/Types"
          },
          "nullable" : {
            "type" : "boolean"
          },
          "autoIncrement" : {
            "type" : "boolean"
          },
          "simple" : {
            "type" : "string"
          }
        },
        "required" : [ "fqn", "type", "nullable", "autoIncrement", "simple" ]
      },
      "EntityDetails" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "fqn" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnDetails"
            }
          },
          "indexes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IndexDetails"
            }
          },
          "simple" : {
            "type" : "string"
          }
        },
        "required" : [ "fqn", "size", "columns", "indexes", "simple" ]
      },
      "IndexDetails" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "fqn" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "simple" : {
            "type" : "string"
          }
        },
        "required" : [ "fqn", "type", "simple" ]
      },
      "Column" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/Types"
          }
        },
        "required" : [ "name", "type" ]
      },
      "Resultset" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Column"
            }
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicValue"
            }
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "columns", "values", "size" ]
      },
      "Connection" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "host" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "host", "port" ]
      },
      "ErrorStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "description" ]
      },
      "SuccessStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "description" ]
      },
      "Transaction" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "txId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string"
          },
          "state" : {
            "$ref" : "#/components/schemas/TransactionStatus"
          },
          "created" : {
            "type" : "string"
          },
          "ended" : {
            "type" : "string"
          },
          "duration" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "required" : [ "txId", "type", "state", "created", "duration" ]
      },
      "TransactionStatus" : {
        "type" : "string",
        "enum" : [ "IDLE", "RUNNING", "FINALIZING", "ERROR", "COMMIT", "ROLLBACK" ]
      }
    },
    "securitySchemes" : {
      "CookieAuth" : {
        "name" : "SESSIONID",
        "in" : "cookie",
        "type" : "apiKey"
      }
    }
  },
  "servers" : [ ],
  "security" : [ ]
}