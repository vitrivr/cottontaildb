name: Publish Cottontail DB GitHub releases
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17.0.9
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build distribution
        run: ./gradlew distTar
      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      # Prepare release on GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      # Release DBMS binaries
      - name: Upload Release Asset (DBMS)
        id: upload-release-asset-dbms
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./cottontaildb-dbms/build/distributions/cottontaildb-dbms.tar
          asset_name: cottontaildb-dbms-${{ env.VERSION }}.tar
          asset_content_type: application/tar

      # Release CLI binaries
      - name: Upload Release Asset (CLI)
        id: upload-release-asset-cli
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cottontaildb-cli/build/distributions/cottontaildb-cli.tar
          asset_name: cottontaildb-cli-${{ env.VERSION }}.tar
          asset_content_type: application/tar

      # Release FULL binaries
      - name: Upload Release Asset (Full)
        id: upload-release-asset-full
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/distributions/cottontaildb-full.tar
          asset_name: cottontaildb-full-${{ env.VERSION }}.tar
          asset_content_type: application/tar