/* Plugins. */
apply plugin: 'application'
apply plugin: 'kotlinx-serialization'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.github.johnrengelman.shadow'

/* Cottontail DB dependencies. */
dependencies {
    /* The Cottontail DB core, which includes the client library. */
    api project(':cottontaildb-core')

    /* MapDB dependency. */
    implementation group: 'org.mapdb', name: 'mapdb', version: version_mapdb

    /* Xodus dependency. */
    implementation group: 'org.jetbrains.xodus', name: 'xodus-openAPI', version: version_xodus
    implementation group: 'org.jetbrains.xodus', name: 'xodus-environment', version: version_xodus
    implementation group: 'org.jetbrains.xodus', name: 'xodus-entity-store', version: version_xodus

    /* Snappy */
    implementation group: 'org.xerial.snappy', name: 'snappy-java', version: version_snappy

    /* FastUtil */
    implementation group: 'it.unimi.dsi', name: 'fastutil', version: version_fastutil

    /* Google Guava */
    implementation group: 'com.google.guava', name: 'guava', version: version_guava

    /* Lucene. */
    implementation group: 'org.apache.lucene', name: 'lucene-core', version: version_lucene
    implementation group: 'org.apache.lucene', name: 'lucene-analysis-common', version: version_lucene
    implementation group: 'org.apache.lucene', name: 'lucene-analysis-phonetic', version: version_lucene
    implementation group: 'org.apache.lucene', name: 'lucene-codecs', version: version_lucene
    implementation group: 'org.apache.lucene', name: 'lucene-queryparser', version: version_lucene

    /* Test Fixtures from Cottontail DB core. .*/
    testFixturesImplementation group: 'io.grpc', name: 'grpc-all', version: version_grpc
    testFixturesImplementation group: 'io.grpc', name: 'grpc-kotlin-stub', version: version_grpc_kotlin
    testFixturesImplementation group: 'com.google.protobuf', name: 'protobuf-java', version: version_protobuf
    testImplementation(testFixtures(project(":cottontaildb-core")))
}

/* General application attributes. */
application {
    applicationName = 'cottontaildb'
    mainClassName = 'org.vitrivr.cottontail.CottontailKt'
    applicationDefaultJvmArgs = ["-Xms2G", "-Xmx4G"]
}

/* Publication of Cottontail DB to Maven Central. */
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'org.vitrivr'
            artifactId = 'cottontaildb'
            version = System.getenv().getOrDefault("MAVEN_PUBLICATION_VERSION", version.toString())
            from components.java
            pom {
                name = 'Cottontail DB'
                description = 'Cottontail DB database as Java / Kotlin library, for use in embedded mode.'
                url = 'https://github.com/vitrivr/cottontaildb/'
                licenses {
                    license {
                        name = 'MIT License'
                    }
                }
                developers {
                    developer {
                        id = 'ppanopticon'
                        name = 'Ralph Gasser'
                        email = 'ralph.gasser@unibas.ch'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/vitrivr/cottontaildb.git'
                    url = 'https://github.com/vitrivr/cottontaildb'
                }
            }
        }
    }
    repositories {
        repositories {
            maven {
                def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
                name = "OSSRH"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

shadowJar {
    mergeServiceFiles()
}

idea {
    module {
        downloadJavadoc = true
        excludeDirs += file('cottontaildb-data')
    }
}

// used to pass flags such as windows to test-runner
test {
    systemProperties(System.getProperties())
}

tasks.withType(Test) {
    useJUnitPlatform()
    jvmArgs '--enable-preview', '--add-modules', 'jdk.incubator.vector'
}

///// Default names for distributions
distZip.archiveFileName = 'cottontaildb-dbms.zip'
distTar.archiveFileName = 'cottontaildb-dbms.tar'

startScripts {
    doLast {
        windowsScript.text = windowsScript.text.replaceAll('set CLASSPATH=.*', 'set CLASSPATH=.;%APP_HOME%/lib/*')
    }
}